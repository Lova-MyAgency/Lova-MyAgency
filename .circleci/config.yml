version: 2

jobs:
  build:
    docker:
      - image: circleci/php:7.4-node-browsers
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DB: symfony
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_PASSWORD:
      - image: mysql:5.7
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
        environment:
          #ici# MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: ~/symfony # directory where steps will run
    steps: # a set of executable commands
      - checkout # special step to check out source code to working directory
      - run: sudo apt update
      - run: sudo apt install -y libsqlite3-dev zlib1g-dev mariadb-client zlib1g-dev
      - run: sudo docker-php-ext-install zip pdo_mysql
      - run: sudo docker-php-ext-enable zip pdo_mysql
      - run: sudo composer self-update
      #ici# - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          #ici# keys:
            #ici# - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            #ici# - composer-v1-
      - run: composer install -n --prefer-dist --no-scripts
      #ici# - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          #ici# key: composer-v1-{{ checksum "composer.lock" }}
          #ici# paths:
            #ici# - vendor
      #ici# - restore_cache: # special step to restore the dependency cache if `package.json` does not change
          #ici# keys:
            #ici# - node-v1-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            #ici# - node-v1-
      - run: cp .env .env.local
      - run: yarn install
      #ici# - save_cache: # special step to save the dependency cache with the `package.json` cache key template
          #ici# key: node-v1-{{ checksum "package.json" }}
          #ici# paths:
            #ici# - node_modules
      - run: yarn run encore
      - run: php bin/console security:check
      - run: curl -L https://cs.symfony.com/download/php-cs-fixer-v2.phar -o php-cs-fixer
      - run: chmod a+x php-cs-fixer
      - run: ./php-cs-fixer --diff --dry-run -v --allow-risky=yes fix
      - run: php -d memory_limit=-1 vendor/bin/phpstan analyse src --level max
      - run: php -d memory_limit=-1 vendor/bin/simple-phpunit

workflows:
  version: 2
  notify_deploy:
    jobs:
      - build

